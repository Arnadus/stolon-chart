apiVersion: batch/v1
kind: Job
metadata:
  name: {{ template "stolon.fullname" . }}-config
  labels:
    app: {{ template "stolon.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  template:
    metadata:
      labels:
        app: {{ template "stolon.fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
        heritage: "{{ .Release.Service }}"
    spec:
      serviceAccountName: {{ template "stolon.serviceAccountName" . }}
      restartPolicy: Never
      initContainers:
      - name: "init-config-cluster"
        image: {{ .Values.image }}:{{ .Values.imageTag }}
        imagePullPolicy: {{ default "Always" .Values.imagePullPolicy }}
        env:
          - name: PGHOST
            value: {{ template "stolon.proxy.fullname" . }}
          - name: PGUSER
            value: {{ .Values.pgSuperuserName  | quote }}
          - name: PGPASSWORD
            value: {{ .Values.pgSuperuserPassword  | quote }}
          - name: PGPORT
            value: {{ .Values.ports.externalPort | quote }}
          - name: PGDATABASE
            value: "postgres"
        command: ["/bin/sh", "-c", "while ! pg_isready ; do sleep 1 && echo -n .; done"]
      containers:
      - name: {{ template "stolon.fullname" . }}
        image: "{{ .Values.image }}:{{ .Values.imageTag }}"
        imagePullPolicy: {{ default "" .Values.imagePullPolicy | quote }}
        env:
          - name: STOLONCTL_STORE_BACKEND
            value: {{ .Values.store.backend | quote}}
          - name: STOLONCTL_STORE_ENDPOINTS
            value: {{ .Values.store.endpoints | quote}}
          - name: STOLONCTL_CLUSTER_NAME
            value: {{ include "stolon.clusterName" . | quote }}
        command: ["/usr/local/bin/stolonctl"]
        args:
          - update
          - --patch
          {{- if eq .Values.store.backend "kubernetes" }}
          - --kube-resource-kind={{ default "configmap" .Values.store.kubeResourceKind }}
          {{- else }}
          - --store-endpoints={{ .Values.store.endpoints }}
          {{- end }}
          - --file={{ .Values.configFile.path }}/{{ .Values.configFile.file }}

        volumeMounts:
        - name: config
          mountPath: {{ .Values.configFile.path }}
      volumes:
      - name: config
        configMap:
          name: {{ default  .Values.configFile.configMap .Values.configFile.existingConfigmap }}

